$size: 2em;

@mixin ring($item-count, $item-size) {
    > .f-avatar-image {
        position: absolute;
        width: $item-size !important;
        height: $item-size !important;
        // Center basis
        top: 50%;
        left: 50%;
        margin: (-$item-size / 2) 0 0 (-$item-size / 2);

        $angle: (360 / $item-count);
        $rot: 0;
        @for $i from 1 through $item-count {
            &:nth-of-type(#{$i}) {
                transform: rotate($rot * 1deg) translate(($size / 2) - ($item-size / 2)) rotate($rot * -1deg);
            }
            $rot: $rot + $angle;
        }
    }
}

.f-avatar {
    padding: 0.025em;
    position: relative;
    width: $size !important;
    height: $size !important;
    min-width: $size !important; // Prevents compression from outer layout influence.
    min-height: $size !important; // Prevents compression from outer layout influence.

    &.f-avatar-image, .f-avatar-image {
        position: relative;
        width: $size !important;
        height: $size !important;

        img {
            display: block;
            border-radius: 500em;
            width: 100% !important;
            height: 100% !important;
            max-width: 100% !important;
            max-height: 100% !important;
            min-width: 100% !important;
            min-height: 100% !important;
        }

        .f-identity.icon {
            position: absolute;
            margin: 0 !important;
            padding: 0 !important;
            top: initial;  // override semantic .icons > .icon
            left: initial;  // override semantic .icons > .icon
            transform: initial;  // override semantic .icons > .icon
            bottom: 0;
            left: 0;
            font-size: $size / 3.5 !important;
            width: initial !important;
            line-height: 1em !important;
            filter: drop-shadow(0px 0px 0.025em white)
                    drop-shadow(0px 0px 0.025em white)
                    drop-shadow(0px 0px 0.025em white)
                    drop-shadow(0px 0px 0.025em white)
                    drop-shadow(0px 0px 0.025em white)
                    drop-shadow(0px 0px 0.025em white)
                    drop-shadow(0px 0px 0.025em white);
            display: none;
        }

        &.identity-exception > .f-identity.exception.icon {
            display: inline-block;
        }
        &.identity-trusted > .f-identity.trusted.icon {
            display: inline-block;
        }

        &.link {
            cursor: pointer;

            img {
                transition: box-shadow 100ms, filter 100ms;
            }

            &:hover img {
                box-shadow: 0.02em 0.02em 0.025em 0 rgba(0, 0, 0, 0.7);
            }

            &:active img {
                box-shadow: none;
                filter: brightness(0.7);
            }
        }

        &.removed img {
            filter: brightness(0.6) grayscale(1) !important;
        }
    }

    &.pair {
        > .f-avatar-image {
            position: absolute;
            width: $size / 1.60 !important;
            height: $size / 1.60 !important;

            &:hover {
                z-index: 1;
            }
        }

        > .f-avatar-image:first-child {
            left: 0;
            top: 0;
        }

        > .f-avatar-image:last-child {
            bottom: 0;
            right: 0;
        }
    }

    &.trifecta {
        > .f-avatar-image {
            width: $size / 1.86 !important;
            height: $size / 1.86 !important;

            &:hover {
                z-index: 1;
            }
        }

        > .f-avatar-image:first-child {
            position: relative;
            margin: 0.05em auto 0;
        }

        > .f-avatar-image:nth-child(2) {
            position: absolute;
            bottom: 0.05em;
            left: 0;
        }

        > .f-avatar-image:last-child {
            position: absolute;
            bottom: 0.05em;
            right: 0;
        }
    }

    &.ring {
        padding: 0;

        > .f-avatar-image:hover {
            z-index: 1;
        }

        > .f-group-size {
            position: absolute;
            top: $size / 2;
            left: $size / 2;
            overflow: hidden;
            font-size: $size / 4;
            width: $size;
            height: $size;
            line-height: $size;
            text-align: center;
            border-radius: 500em;
            color: white;
        }

        &.count-4 {
            @include ring($item-count: 4, $item-size: $size / 2.25);
        }
        &.count-5 {
            @include ring($item-count: 5, $item-size: $size / 2.5);
        }
        &.count-6 {
            @include ring($item-count: 6, $item-size: $size / 2.75);
        }
        &.count-7 {
            @include ring($item-count: 7, $item-size: $size / 3.33);
        }
        &.count-8 {
            @include ring($item-count: 8, $item-size: $size / 3.5);
        }
        &.count-9 {
            @include ring($item-count: 9, $item-size: $size / 3.75);
        }
        &.count-10 {
            @include ring($item-count: 10, $item-size: $size / 4);
        }
    }

    &.loader {
        /* Present a ui.loader style animating ring */

        &::after {
            position: absolute;
            content: '';
            opacity: 0;
            transition: opacity 400ms;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 500rem;
            border-color: #fffa transparent transparent transparent;
            border-style: solid;
            border-width: 0.15em;
        }

        &.active::after {
            opacity: 1;
            animation: loader 1s linear;
            animation-iteration-count: infinite;
        }
    }
}

@mixin avatar($size: 2rem) {
    .f-avatar {
        width: $size;
        height: $size;

        .ui.label.avatar {
            overflow: hidden;
            display: block;
            min-height: initial; // clear semantic base style mins
            min-width: initial; // clear semantic base style mins
            padding: 0 !important;

            span {
                font-size: $size / 2;
                line-height: $size;
                font-weight: normal;
            }
        }

        &.grid {
            display: grid;
            grid-gap: 0;
            grid-template-columns: repeat(2, $size / 2.05);

            > .ui.image.avatar, .ui.label.avatar {
                width: $size / 2.05;
                height: $size / 2.05;

                span {
                    font-size: $size / 4.1;
                    line-height: $size / 2.05;
                }
                &:nth-child(n+5) {
                    display: none;
                }
            }
        }
    }
}

@mixin _fab-shadow {
    box-shadow: 0.08em 0.08em 0.25em 0.025em rgba(0, 0, 0, 0.3);
    &:hover:not(.disabled), &.open:not(.disabled) {
        box-shadow: 0.08em 0.08em 0.25em 0.025em rgba(0, 0, 0, 0.5);
    }
}

@mixin fab-button($font-size: 1em, $fgcolor: white) {
    $button-size: $font-size * 2;
    $extra-button-offset: 0.5em;
    $extra-button-pad: 0.25em;
    $animationTime: 200ms;
    $animationHideDelay: $animationTime * 2;

    .fab-button {
        @include _fab-shadow;
        position: relative;
        width: $button-size;
        height: $button-size;
        font-size: $font-size;
        position: relative;
        border-radius: 500rem;
        cursor: pointer;
        transition: box-shadow 200ms ease;

        i.icon {
            border-radius: 500rem;
            transition: visibility $animationTime, transform $animationTime, opacity $animationTime;
            width: inherit;
            height: inherit;
            position: absolute;
            color: $fgcolor !important;
            line-height: $button-size;
            transform-origin: $font-size $font-size 0; // Center the rotatation.

            &::before {
                transition: opacity $animationTime;
            }

            &.red {
                background-color: $red !important;
            }
            &.orange {
                background-color: $orange !important;
            }
            &.blue {
                background-color: $blue !important;
            }
            &.light-blue {
                background-color: $light-blue !important;
            }
            &.green {
                background-color: $green !important;
            }
            &.pink {
                background-color: $material_pink !important;
            }
            &.purple {
                background-color: $material_purple !important;
            }
            &.indigo {
                background-color: $material_indigo !important;
            }
            &.cyan {
                background-color: $material_cyan !important;
            }
            &.teal {
                background-color: $material_teal !important;
            }
            &.light-green {
                background-color: $material_light_green !important;
            }
            &.deep-orange {
                background-color: $material_deep_orange !important;
            }
            &.amber {
                background-color: $material_amber !important;
            }
            &.blue-grey {
                background-color: $material_blue_grey !important;
            }
        }

        .icon.disabled {
            cursor: default;
            opacity: 0;
        }

        .icon:first-child {
            transition-delay: $animationHideDelay;

            &:active {
                box-shadow: 0 0 .25em 0.025em rgba(0, 0, 0, 0.3) inset;
            }

            &::before {
                transition-delay: $animationHideDelay;
            }
        }

        .icon:nth-child(2) {
            background-color: transparent;
            transition-delay: $animationHideDelay;

            &:active {
                box-shadow: 0 0 .25em 0.025em rgba(0, 0, 0, 0.3) inset;
            }

            &::before {
                transition-delay: $animationHideDelay;
                opacity: 0;
            }
        }

        /* extra icons... */
        .icon:nth-child(n+3) {
            @include _fab-shadow;
            visibility: hidden;
            background-color: $material_blue_grey;
            font-size: $font-size * (2/3);
            width: $button-size; // Must specify again to recalc from inner font-size
            height: $button-size; // Must specify again to recalc from inner font-size
            left: 0.2em;

            &:active {
                box-shadow: 0 0 .25em 0.025em rgba(0, 0, 0, 0.3) inset;
            }
        }
        .icon:nth-child(3) {
            top: $extra-button-offset + ($button-size + $extra-button-pad);
            transition-delay: $animationTime * 0.75;
        }
        .icon:nth-child(4) {
            top: $extra-button-offset + ($button-size + $extra-button-pad) * 2;
            transition-delay: $animationTime * 0.65;
        }
        .icon:nth-child(5) {
            top: $extra-button-offset + ($button-size + $extra-button-pad) * 3;
            transition-delay: $animationTime * 0.55;
        }
        .icon:nth-child(6) {
            top: $extra-button-offset + ($button-size + $extra-button-pad) * 4;
            transition-delay: $animationTime * 0.45;
        }
        .icon:nth-child(7) {
            top: $extra-button-offset + ($button-size + $extra-button-pad) * 5;
            transition-delay: $animationTime * 0.35;
        }
        .icon:nth-child(8) {
            top: $extra-button-offset + ($button-size + $extra-button-pad) * 6;
            transition-delay: $animationTime * 0.25;
        }

        &:hover, &.open {
            .icon:first-child:not(.disabled) {
                transform: rotate(180deg);
                transition-delay: 0s;

                &::before {
                    transition-delay: 0s;
                    opacity: 0; // Do opacity on icon content, not the box.
                }
            }
            .icon:nth-child(2):not(.disabled) {
                transform: rotate(360deg);
                transition-delay: 0s;

                &::before {
                    transition-delay: 0s;
                    opacity: 1; // Do opacity on icon content, not the box.
                }
            }

            /* extra icons... */
            .icon:nth-child(n+3):not(.disabled) {
                visibility: visible;
                opacity: 1;
            }
            .icon:nth-child(3) {
                transition-delay: $animationTime * 0.25;
            }
            .icon:nth-child(4) {
                transition-delay: $animationTime * 0.35;
            }
            .icon:nth-child(5) {
                transition-delay: $animationTime * 0.45;
            }
            .icon:nth-child(6) {
                transition-delay: $animationTime * 0.55;
            }
            .icon:nth-child(7) {
                transition-delay: $animationTime * 0.65;
            }
            .icon:nth-child(8) {
                transition-delay: $animationTime * 0.75;
            }
        }

        .icon:active {
            filter: brightness(80%);
            transition: initial;
        }
    }
}

@mixin color-svg($svg, $color) {
    -webkit-mask: url($svg) no-repeat center;
    -webkit-mask-size: 100%;
    background-color: $color;
}

/* Use to cleanup tags that get used for user input or feed rendering... */
@mixin sanitize-html {

    samp, pre, code {
        font-size: 90%;
        border-radius: 0.2em;
    }

    samp {
        background: rgba(220, 175, 39, 0.30);
        padding: 0.15em 0.25em;
        margin-left: 0.15em;
        margin-right: 0.15em;
    }

    /* XXX/TODO fix pre > code to look like just pre or code not nested */

    pre, code {
        background: rgba(236, 231, 216, 0.23);
        border: 1px solid rgba(173, 166, 148, 0.79);
        padding: 0.6em;
        display: block;
        box-shadow: 1px 1px 4px 0 rgba(0, 0, 0, 0.10);
        min-width: 16ch;
        margin: 1em 0;
        max-width: 90%;
        max-height: 30em;
        overflow: auto;
    }

    img {
        max-width: 90%;
    }

    p {
        max-width: $maxTextWidth;
    }

    h1, h2, h3, h4, h5, h6 {
        margin: 0.1em;
        display: inline-block;
    }

    h6 {
        font-size: 1em;
    }
    h5 {
        font-size: 1.2em;
    }
    h4 {
        font-size: 1.6em;
    }
    h3 {
        font-size: 2.2em;
    }
    h2 {
        font-size: 3.5em;
    }
    h1 {
        font-size: 4em;
    }

    blink {
        animation: blinker 1.5s infinite;
    }

    @keyframes blinker {
        0%, 49% {
            opacity: 1;
        }
        50%, 100% {
            opacity: 0;
        }
    }

    ins {
        background: black;
        color: white;
    }

    table {
        margin: 1em;
        box-shadow: .1em .1em .5em 0 rgba(126, 126, 126, 0.60);

        td {
            padding: .5em;
        }

        tr:nth-child(even) {
            background-color: rgba(125, 125, 125, 0.1);
        }
        tr:nth-child(odd) {
            background-color: rgba(125, 125, 125, 0.02);
        }
    }
}

@import 'variables';
@import 'mixins';

@import 'hourglass';
@import 'xmodal';
@import 'lightbox';


@mixin avatar($size: 2rem) {
    .ui.image.avatar, .ui.label.avatar {
        width: $size;
        height: $size;
        padding: 0 !important;
    }

    .ui.label.avatar {
        overflow: hidden;
        display: block;

        span {
            font-size: $size / 2;
            line-height: $size;
            font-weight: normal;
        }
    }
}

img.emoji {
    vertical-align: text-bottom;
}

body {
    display: flex;
    flex-direction: column;
    font-family: Lato;
}

header {
    position: relative;

    .ui.menu {
        height: 4em;
        margin: 0;
        border: none;
        border-radius: initial;

        .item img.f-logo {
            margin: -1.1em 0em -0.9em;
            width: 3.2em;
        }
    }

    /*
    &::after {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        z-index: 0;
        box-shadow: rgba(128, 128, 128, 0.25) 0px 0px 6px 4px;
    }
    */
}

main {
    flex: 1;
    display: flex;
    overflow: hidden;
}

$navWidth: 350px;

nav {
    margin: 0;
    padding: 0;
    width: $navWidth;
    height: 100%;
    transition: width 400ms;
    overflow: hidden;
}

nav > .ui.segment {
    width: $navWidth;  // cleaner transitions.
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;

    .ui.table {
        margin: 1em 0;

        @mixin first-cells {
            padding-right: 0;
        }

        th {
            padding-top: .5em;
            padding-bottom: .5em;

            .ui.ribbon.label {
                left: calc(-.83rem - 1.2em);
            }

            &:hover {
                cursor: pointer;
            }

            &:first-child {
                @include first-cells;
            }
        }

        tr {
            cursor: pointer;
            color: $accent2;

            &.unread {
                color: black;
                font-weight: bold;
                //box-shadow: rgba(0, 0, 0, 0.66) 0px 0px 2px 2px;
            }

            &.active {
                background: rgba(0, 0, 0, .15) !important;
                color: darken($accent1, 10) !important;
            }
        }

        td {
            &:first-child {
                @include first-cells;
                position: relative;  // Support floating labels
            }

            &:not(:first-child) {
                padding: .5rem;
            }
        }

        .title {
            font-weight: bold;
        }

        $avatar_size: 3rem;

        @include avatar($avatar_size);

        .f-unreadcount {
            top: $avatar_size * .90;
            left: $avatar_size * .90;
            z-index: 1; // Hide behind menu
            opacity: 0.9;
            margin: 0 !important;
        }

        .single-line {
            position: relative;
            height: 1.5em;

            p {
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                position: absolute;
                width: 100%;

                img.emoji {
                    height: 1.2em;
                }
            }
        }
    }
}


article {
    flex: 1;
    flex-direction: column;
    display: flex;
    position: relative; /* support attached labels */

}

.f-org.ui.menu {
    border: 0;
    border-radius: 0;
    background: #ececec;
}

#f-article-conversation-stack {
    flex: 1;
    overflow: hidden;

    .f-compose {
        .ui.menu.top.attached button,
        .ui.menu .item {
            padding: .3em .1em;
        }

        $focusBorder: #85B7D9;

        .f-input {
            border-radius: .28em;
            opacity: 0.80;
            transition: box-shadow 100ms ease,
                        border-color 100ms ease,
                        opacity 100ms ease;

            .ui.label {
                border-top-left-radius: inherit;
                border-bottom-left-radius: inherit;
                border: 1px solid transparent;
                border-right: none;
                transition: inherit;
            }

            .f-message {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
                border-top-right-radius: inherit;
                border-bottom-right-radius: inherit;
                display: inline-block;
                max-height: 10em;
                width: 100%;
                word-break: break-all; // ff, et. al.
                word-break: break-word; // chrome
                overflow: auto;
                padding: .65em 1em;
                border: 1px solid rgba(34, 36, 38, 0.15);
                outline: none;
                transition: inherit;

                .placeholder {
                    color: lighten(black, 75);
                }
            }

            i.circular.icon {
                bottom: calc(2em / 2 - 0.6em);
                top: initial;
            }

            &.focused {
                box-shadow: 2px 2px 3px 1px rgba(123, 123, 123, 0.33);
                opacity: 1;

                .ui.label {
                    border-color: $focusBorder;
                }

                .f-message {
                    border-color: $focusBorder;
                }

                i.link.icon {
                    opacity: 1;
                }
            }
        }
    }

    .ui.feed .extra.text {
        width: initial;

        img.emoji {
            height: 1.5em;
        }
    }

    /* XXX work this in */
    .error-icon {
        display: inline-block;
        width: $error-icon-size;
        height: $error-icon-size;
        position: relative;
        @include color-svg('../images/warning.svg', red);
    }

    .hasRetry + .timestamp {
        &:before {
            content:"\00b7"; // &middot
            font-weight: bold;
            padding: 0 5px 0 4px;
            text-decoration: none;
            opacity: 0.5;
        }
    }

    .retry {
        text-decoration: underline;
        cursor: pointer;
    }

    .status {
        display: inline-block;
        width: 1em;
        height: 1em;
        vertical-align: text-bottom;
    }

    .sent .status {
        @include color-svg('../images/check.svg', black);
    }

    .sent.delivered .status {
        @include color-svg('../images/double-check.svg', black);
    }

    .pending .status:before {
        content: '...';
    }

    .timer {
        display: none;

        .hourglass {
            @include hourglass(#e44);
            vertical-align: middle;
        }
    }

    .ui.feed .extra.attachments .attachment {
        img, audio, video {
            max-width: 12em;
            max-height: 8em;
            width: initial;
            height: initial;
        }
    }

    .conversation {
        display: none;
        flex-direction: column;
        height: 100%;

        &:first-child {
            display: flex;
        }

        .ui.feed {
            flex: 1;
            overflow: auto;
            margin: 0;
            padding: 0 1em 1em;

            @include avatar(2rem);
            .ui.label.avatar {
                margin: 0.3em 0 0 1em;
            }
        }
    }
}

.f-timeline.ui.divider {
    font-weight: normal;
    color: #888;
    margin: 1rem 1rem 0;
}

aside {
    margin: 0;
    padding: 0;
    width: 300px;
}

.ui.modal .icon.inset {
    top: 1rem;
    right: 1rem;
}

.f-search {
    width: 50ch;
}


/* backwards compat for attached image previews. XXX */
.x {
    display: inline-block;
    float: right;
    cursor: pointer;
    border-radius: 50%;
    width: 22px;
    height: 22px;
    padding: 3px;
    background: $accent2;

    &:before {
        content: '';
        display: block;
        width: 100%;
        height: 100%;
        @include color-svg('../images/x.svg', white);
    }
}

